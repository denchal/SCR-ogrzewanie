package HeatingSystem
public
	with sei;

-- Definicje typów danych
data Temperature
end Temperature;

data HeatDemand
end HeatDemand;

data ValveCommand
end ValveCommand;

data BoilerCommand
end BoilerCommand;

-- Główna aplikacja systemu
system HeatingControlSystem
end HeatingControlSystem;


process EmergencySwitch
features
    emergency_mode: out event port;
end EmergencySwitch;

process implementation EmergencySwitch.impl
end EmergencySwitch.impl;

process ErrorSignal
features
    error: out event port;
end ErrorSignal;

process implementation ErrorSignal.impl
end ErrorSignal.impl;

-- Termostat pokojowy
device RoomThermostat
features
    heat_demand: out data port HeatDemand;
    conn_bus: requires bus access ConnBus;
end RoomThermostat;

device implementation RoomThermostat.impl
	properties
		SEI::GrossWeight => 0.3kg;
end RoomThermostat.impl;

-- Zawór strefowy
device ZoneValve
features
    valve_control: in data port ValveCommand;
    conn_bus: requires bus access ConnBus;
end ZoneValve;

device implementation ZoneValve.impl
	properties
		SEI::GrossWeight => 0.33kg;
end ZoneValve.impl;

bus ConnBus
end ConnBus;

bus implementation ConnBus.impl
	properties
		SEI::GrossWeight => 0.01kg;
		SEI::BandwidthCapacity => 100.0 Mbps;
		SEI::BandwidthBudget => 1.0 Mbps;
end ConnBus.impl;


-- Piec
device Boiler
	features
    heat_demand: in data port HeatDemand;
    scheduler_command: in data port BoilerCommand;
    error_signal: in event port;
    emergency_mode: in event port;
    conn_bus: requires bus access ConnBus;
end Boiler;

device implementation Boiler.impl
	properties
		SEI::GrossWeight => 15.0kg;
end Boiler.impl;

-- Wątek harmonogramu
process Scheduler
features
	setter: out data port BoilerCommand;
end Scheduler;

process implementation Scheduler.impl
end Scheduler.impl;

process Distributor
	features
		zone1_heat_demand: in data port HeatDemand;
		zone2_heat_demand: in data port HeatDemand;
		zone1_water_output: out data port ValveCommand;
		zone2_water_output: out data port ValveCommand;
		total_heat_demand: out data port HeatDemand;
end Distributor;

process implementation Distributor.impl
end Distributor.impl;

system implementation HeatingControlSystem.impl
subcomponents
    scheduler: process Scheduler.impl;
	conn_bus: bus ConnBus.impl;
    boiler: device Boiler.impl;
    distributor: process Distributor.impl;
    emergency: process EmergencySwitch.impl;
    error: process ErrorSignal.impl;

    -- Strefa 1
    zone1_thermostat: device RoomThermostat.impl;
    zone1_valve: device ZoneValve.impl;

    -- Strefa 2
    zone2_thermostat: device RoomThermostat.impl;
    zone2_valve: device ZoneValve.impl;
    

	connections
	c2: bus access boiler.conn_bus <-> conn_bus
	{
		SEI::BandwidthBudget => 0.2Mbps;
	};
	c4: bus access zone1_thermostat.conn_bus <-> conn_bus
	{
		SEI::BandwidthBudget => 0.2Mbps;
	};
	c5: bus access zone2_thermostat.conn_bus <-> conn_bus
	{
		SEI::BandwidthBudget => 0.2Mbps;
	};
	c6: bus access zone1_valve.conn_bus <-> conn_bus
	{
		SEI::BandwidthBudget => 0.2Mbps;
	};
	c7: bus access zone2_valve.conn_bus <-> conn_bus
	{
		SEI::BandwidthBudget => 0.2Mbps;
	};
	
	c8: bus access zone2_valve.conn_bus <-> conn_bus
	{
		SEI::BandwidthBudget => 0.2Mbps;
	};
	
	c9: port zone1_thermostat.heat_demand -> distributor.zone1_heat_demand;
	c10: port zone2_thermostat.heat_demand -> distributor.zone2_heat_demand;
	c11: port distributor.total_heat_demand -> boiler.heat_demand;
	
	c12: port distributor.zone1_water_output -> zone1_valve.valve_control;
	c13: port distributor.zone2_water_output -> zone2_valve.valve_control;
	c14: port scheduler.setter -> boiler.scheduler_command;
	c15: port emergency.emergency_mode -> boiler.emergency_mode;
	c16: port error.error -> boiler.error_signal;
	

	properties
		Actual_Connection_Binding => (reference(boiler)) applies to scheduler;
		Actual_Connection_Binding => (reference(boiler)) applies to distributor;
end HeatingControlSystem.impl;

end HeatingSystem;